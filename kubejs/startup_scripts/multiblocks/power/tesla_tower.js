GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('tesla_tower')
        .category('generator')
        .setEUIO('out')
        .setMaxIOSize(2, 2, 0, 0)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.TURBINE)
})





GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('tesla_tower', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .generator(true)
        .recipeType('tesla_tower')
        .noRecipeModifier()
        .appearanceBlock(GTBlocks.CASING_TUNGSTENSTEEL_ROBUST)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('###CRC###', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', )
            .aisle('#CCTTTCC#', '####C####', '####C####', '#########', '#########', '#########', '#########', '#########', '#########', '####T####', '####T####', '#########', '#########', '#########', '#########', '#########', '#########', )
            .aisle('#CTCCCTC#', '##C###C##', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '####T####', '###TTT###', '###YTY###', '###YYY###', '####Y####', '#########', )
            .aisle('CTCCCCCTC', '#########', '####U####', '#########', '###UUU###', '#########', '####U####', '#########', '###UUU###', '#########', '####U####', '#########', '##TCCCT##', '##Y#P#Y##', '##Y###Y##', '###Y#Y###', '####Y####', )
            .aisle('LTCCCCCTO', '#C##P##C#', '#C#UPU#C#', '####P####', '###UPU###', '####P####', '###UPU###', '####P####', '###UPU###', '#T##P##T#', '#T#UPU#T#', '##T#P#T##', '##TCCCT##', '##TPPPT##', '##Y#P#Y##', '##Y###Y##', '###YYY###', )
            .aisle('CTCCCCCTC', '#########', '####U####', '#########', '###UUU###', '#########', '####U####', '#########', '###UUU###', '#########', '####U####', '#########', '##TCCCT##', '##Y#P#Y##', '##Y###Y##', '###Y#Y###', '####Y####', )
            .aisle('#CTCCCTC#', '##C###C##', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '####T####', '###TTT###', '###YTY###', '###YYY###', '####Y####', '#########', )
            .aisle('#CCTTTCC#', '####C####', '####C####', '#########', '#########', '#########', '#########', '#########', '#########', '####T####', '####T####', '#########', '#########', '#########', '#########', '#########', '#########', )
            .aisle('###CKC###', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', '#########', )
            .where('K', Predicates.controller(Predicates.blocks(definition.get())))
            .where('R', Predicates.abilities(PartAbility.OUTPUT_ENERGY)
            .or(Predicates.abilities(PartAbility.SUBSTATION_OUTPUT_ENERGY))
            .or(Predicates.abilities(PartAbility.OUTPUT_LASER))
            )
            .where('T', Predicates.blocks('gtceu:tungstensteel_pipe_casing'))
            .where('U', Predicates.blocks('gtceu:sturdy_machine_casing'))
            .where('Y', Predicates.blocks('gtceu:laminated_glass'))
            .where('P', Predicates.blocks('kubejs:osmiridium_pipe_casing'))
            .where('L', Predicates.abilities(PartAbility.MAINTENANCE))
            .where('O', Predicates.abilities(PartAbility.MUFFLER))
            .where("C", Predicates.blocks('gtceu:robust_machine_casing')
            .or(Predicates.abilities(PartAbility.IMPORT_ITEMS, PartAbility.EXPORT_ITEMS))
            )
            .where('#', Predicates.any())
            .build()
        )
        .workableCasingRenderer("gtceu:block/casings/solid/machine_casing_robust_tungstensteel", 'gtceu:block/multiblock/generator/large_plasma_turbine', true)
    })
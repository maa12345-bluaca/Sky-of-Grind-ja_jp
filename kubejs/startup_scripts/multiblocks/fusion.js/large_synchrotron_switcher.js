GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('large_synchrotron_switcher')
        .category('multiblocks')
        .setEUIO('in')
        .setMaxIOSize(8, 8, 8, 8)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.REPLICATOR)
})





GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('large_synchrotron_switcher', 'multiblock')
        .rotationState(RotationState.ALL)
        .recipeType('large_synchrotron_switcher')
        .recipeModifiers([GTRecipeModifiers.OC_NON_PERFECT])
        .appearanceBlock(() => Block.getBlock('kubejs:highly_reinforced_radioactive_casing'))
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '#######D#######', '#######D#######', '#######D#######', '#######D#######', '#######D#######', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############')
            .aisle('###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '#######D#######', '#######D#######', '#######D#######', '###############', '###############', '###############', '###############', '###############', '#######D#######', '#######D#######', '#######D#######', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############', '###############')
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .aisle
            .where('K', Predicates.controller(Predicates.blocks(definition.get())))
            .where('Y', Predicates.blocks('gtceu:chaos_block'))
            .where('W', Predicates.blocks('gtceu:electrolytic_cell'))
            .where('D', Predicates.blocks('kubejs:highly_superconducting_coil_block'))
            .where('E', Predicates.blocks('kubejs:stellar_powered_casing'))
            .where("C", Predicates.blocks('kubejs:highly_reinforced_radioactive_casing').setMinGlobalLimited(180)
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS, PartAbility.EXPORT_FLUIDS, PartAbility.IMPORT_ITEMS, PartAbility.IMPORT_FLUIDS))
                .or(Predicates.abilities(PartAbility.MAINTENANCE))
                .or(Predicates.abilities(PartAbility.INPUT_LASER).setExactLimit(1))
            )
            .where('#', Predicates.any())
            .build()
        )
        .workableCasingRenderer("kubejs:block/casings/highly_reinforced_radioactive_casing", 'gtceu:block/multiblock/network_switch', true)
})